source("style/setup.R")
library(trend)
library(readxl)
library(modelr)
load("data/rd.rdata")
ggplot(data = rd) +
geom_line(mapping = aes(x = MESS_DATUM, y = RS, color = STATION))
rd_freiburg <- rd %>% filter(STATION == 'Freiburg')
mod_freiburg <- lm(data = rd_freiburg, RS ~ MESS_DATUM)
rd_freiburg <- rd_freiburg %>% add_predictions(mod_freiburg)
bo_kable(rd_freiburg)
ggplot(data = rd_freiburg) +
geom_line(mapping = aes(x = MESS_DATUM, y = pred), color = 'red')
rd_stationen <- rd %>%
group_by(STATION) %>%
nest()
rd_stationen
rd_stationen$data[[1]]
stations_modell <- function(df) { lm(data = df, RS ~ MESS_DATUM) }
map(rd_stationen$data, stations_modell)
rd_stationen <- rd_stationen %>%
mutate(
MODELL = map(data, stations_modell)
)
rd_stationen
rd_stationen <- rd_stationen %>%
mutate(data2 = map2(data, MODELL, add_predictions))
rd_stationen
rd_lineare_trends <- rd_stationen %>%
unnest(data2) %>%
select(-data, -MODELL)
bo_kable(rd_lineare_trends)
ggplot(data = rd_lineare_trends) +
geom_line(mapping = aes(x = MESS_DATUM, y = pred, color = STATION))
linearer_trend_dataframe <- function(s, df) {
m <- lm(data = df, RS ~ MESS_DATUM)
tibble(STATION = s, ALPHA = m$coefficients[1], BETA = m$coefficients[2])
}
rd_lineare_trends_2 <- map2_dfr(rd_stationen$STATION, rd_stationen$data, linearer_trend_dataframe)
bo_kable(rd_lineare_trends_2)
ggplot() +
geom_smooth(data = rd, mapping = aes(x = MESS_DATUM, y = RS, color = STATION), size = 0.2) +
geom_abline(
data = rd_lineare_trends_2, mapping = aes(intercept = ALPHA, slope = BETA, color = STATION)
)
mk_dataframe <- function(s, df) {
t <- mk.test(na.omit(df$RS))
tibble(STATION = s, p = t$p.value)
}
rd_mk <- map2_dfr(rd_stationen$STATION, rd_stationen$data, mk_dataframe)
bo_kable(rd_mk)
ggplot(data = rd_mk) +
geom_col(mapping = aes(x = STATION, y = p, fill = STATION), show.legend = FALSE)
library(giscoR)
#| echo: false
#| message: false
library(sf)
library(giscoR)
library(lubridate)
library(patchwork)
library(tidyverse)
library(rdwd)
library(RCurl)
library(knitr)
d <- selectDWD(name = "Koeln-Bonn", res = "daily", var = "kl", per = "historical", current=TRUE) |>
dataDWD(read = FALSE) |>
readDWD(varnames = TRUE) |>
mutate(datum = ymd(MESS_DATUM))
ggplot(data = d) + geom_col(mapping = aes(x = datum, y = RSK.Niederschlagshoehe, current =TRUE))
data("geoIndex")
show(geoIndex |> select(-display))
data("metaIndex")
show(metaIndex)
ids <- findID("Berlin", exactmatch = FALSE)
metaIndex |>
filter(Stations_id %in% ids, res == 'daily', var == 'kl', per == 'historical') |>
show()
source("style/setup.R")
library(rdwd)
library(tsibble)
library(RcppRoll)
data("metaIndex")
d_stationen <- metaIndex |>
filter(var == "wind", res == "10_minutes") |>
mutate(Dauer = round(as.numeric(bis_datum -von_datum) / 365)) |>
arrange(desc(Dauer)) |>
select(von_datum, bis_datum, Dauer, Stationsname, Bundesland)
bo_kable(d_stationen)
fname <- "data/d_wind_raw.RData"
if (!file.exists(fname)) {
d_wind_raw <- selectDWD(
name = "Helgoland", res = "10_minutes", var = "wind", per = "historical"
) |>
dataDWD() |>
bind_rows()
save(d_wind_raw, file = fname)
} else {
load(file = fname)
}
rm(fname)
bo_kable(d_wind_raw)
d_wind_raw_ts <- d_wind_raw |>
select(Station = STATIONS_ID, Datum = MESS_DATUM, Geschwindigkeit = FF_10) |>
distinct(Datum, .keep_all = TRUE) |>
as_tsibble(key = Station, index = Datum)
d_wind_raw_ts
ggplot(data = d_wind_raw_ts) +
geom_line(mapping = aes(x = Datum, y = Geschwindigkeit))
d_wind_raw_ts |> count_gaps() |> bo_kable()
d_wind <- d_wind_raw_ts |> fill_gaps()
d_wind |> bo_kable()
ggplot(d_wind) +
geom_line(mapping = aes(x = Datum, y = Geschwindigkeit))
d_wind_stark <- d_wind |>
mutate(
v_min_120 = roll_minr(Geschwindigkeit, n = 12, na.rm = TRUE),
v_max_120 = roll_maxr(Geschwindigkeit, n = 12, na.rm = TRUE)
) |>
filter(v_min_120 >= 10, v_max_120 >= 20)
d_wind_stark |> bo_kable()
ggplot(data = d_wind_stark) +
geom_line(mapping = aes(x = Datum, y = v_min_120))
d_wind_stark_g <- d_wind_stark |>
mutate(
neue_gruppe = Datum - lag(Datum, default = ymd_hms("19700101000000")) > 10,
gruppe = cumsum(neue_gruppe)
)
d_wind_stark_g |> bo_kable()
ggplot(data = d_wind_stark_g) +
geom_line(mapping = aes(x = Datum, y = v_min_120, group = gruppe))
d_starkwindereignisse <- d_wind_stark_g |> as_tibble() |>
group_by(gruppe) |>
summarise(
start = min(Datum),
dauer = max(Datum) - min(Datum),
v_max = max(v_max_120)
)
d_starkwindereignisse |> bo_kable()
ggplot(data = d_starkwindereignisse) +
geom_histogram(mapping = aes(x = v_max), binwidth = 0.5)
ggplot(data = d_starkwindereignisse) +
geom_histogram(mapping = aes(x = dauer), binwidth = 3600) +
scale_x_time()
#| echo: false
library(tidyverse)
d <- tibble(A = c(1, 2, 3), B = c('u', 'v', 'w'))
save(d, file = "daten/test.RData")
#| echo: false
library(tidyverse)
d <- tibble(A = c(1, 2, 3), B = c('u', 'v', 'w'))
save(d, file = "daten/neu.RData")
install.packages("gz.file")
#| echo: false
library(rdwd)
library(tidyverse)
d <- selectDWD(name = "Bochum", res = "daily", var = "kl", per = "historical", current=TRUE) |>
dataDWD(read = FALSE) |>
readDWD(varnames = TRUE) |>
mutate(datum = ymd(MESS_DATUM))
ggplot(data = d) + geom_col(mapping = aes(x = datum, y = RSK.Niederschlagshoehe))
data("geoIndex")
geoIndex
data("metaIndex")
metaIndex
ids <- findID("Berlin", exactmatch = FALSE, quiet = TRUE)
metaIndex |>
filter(Stations_id %in% ids, res == 'daily', var == 'kl', per == 'historical') |>
select(Stationsname, von_datum, bis_datum)
